@using VitEgoDictionary.Models

@model VitEgoDictionary.Models.ViewModels.ItemViewModel

@{
    var phrasalVerb = Model.Item as PhrasalVerb;
    ViewBag.Title = "VitEgo" + (phrasalVerb == null ? String.Empty : (" | " + phrasalVerb.Name));
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="body">
    <div id="body-title"><h1>Phrasal Verbs</h1></div>
    <hr />
    <div id="body-body">

        @{ Html.RenderAction("SearchPanelSimple", "PhrasalVerb"); }

        <div class="panel panel-default">
            <div class="panel-body">
                <div class="dashboard text-right">
                    <a href="@Url.Action("Create", "PhrasalVerb")">
                        <span class="fa fa-plus-square-o fa-lg fa-fw"></span><span>Create</span>
                    </a>
                    @if (phrasalVerb != null) {
                        <a href="@Url.Action("Edit", "PhrasalVerb", new { id = phrasalVerb.ID })">
                            <span class="fa fa-edit fa-lg fa-fw"></span><span>Edit</span>
                        </a>
                        <a href="#/" data-toggle="modal" data-target="#modal-dialog" data-content="Are you sure you want to delete the phrasal verb '@phrasalVerb.Name'?" 
                            data-buttons="CloseDelete" data-action="@Url.Action("Delete", "PhrasalVerb", new { id = phrasalVerb.ID })">
                            <span class="fa fa-trash-o fa-lg fa-fw"></span><span>Delete</span>
                        </a>
                    }
                </div>
                @if (phrasalVerb == null) {   
                    <div>
                        <h2 class="warning">Search Results</h2>
                    </div>
                    <hr />
                    <div>
                        <p class="warning">Sorry, no results were found! Please try to search again with another parameters!</p>
                    </div>
                } else {
                    <div>
                        <h2>
                            <span>@phrasalVerb.Name</span>
                            @if (phrasalVerb.IDF_Formality != 1) { <span class="note">@phrasalVerb.Formality.Name</span> }
                        </h2>
                    </div>
                    <hr />
                    <div>
                        <h3>Base Verb</h3>
                        <a href="@Url.Action("Item", "Word", new { id = phrasalVerb.Verb.ID })">
                            @phrasalVerb.Verb.Name
                            <span class="speech-part">@phrasalVerb.Verb.SpeechPart.ShortName</span>
                        </a>
                    </div>
                    
                    if (phrasalVerb.Meanings.Count > 0) {
                        <hr />
                        <div>
                            <h3>Meanings</h3>
                            <ol>
                                @foreach (var meaning in phrasalVerb.Meanings.OrderBy(i => i.Meaning)) {
                                    <li>                                           
                                        <span class="meaning">@meaning.Meaning</span>
                                        <ul class="example-list">
                                            @foreach (var example in meaning.Examples) {
                                                <li>
                                                    @foreach (var item in LexicalAnalyzer.Highlight(example.Example, phrasalVerb)) {
                                                        <span class="@(item.IsHighlighted ? "highlighted" : "example")">@item.Text</span>
                                                    }
                                                </li>
                                            }
                                        </ul>
                                        @if (meaning.SynonymSet != null) {
                                            <div>
                                                <ul class="synonym">
                                                    <li><span class="synonym">Synonyms:</span></li>
                                                    @foreach (var synonym in meaning.SynonymSet.WordMeanings.
                                                        Select(i => i.Word).Distinct().OrderBy(i => i.Name)) {
                                                        <li>
                                                            <a href="@Url.Action("Item", "Word", new { id = synonym.ID })"> @synonym.Name
                                                                <span class="speech-part">@synonym.SpeechPart.ShortName</span>
                                                            </a>
                                                        </li>
                                                    }
                                                    @foreach (var synonym in meaning.SynonymSet.PhrasalVerbMeanings.Where(i => i.IDF_PhrasalVerb != phrasalVerb.ID).
                                                        Select(i => i.PhrasalVerb).Distinct().OrderBy(i => i.Name)) {
                                                        <li>
                                                            <a href="@Url.Action("Item", "PhrasalVerb", new { id = synonym.ID })"> @synonym.Name
                                                                <span class="speech-part">@synonym.Verb.SpeechPart.ShortName</span>
                                                            </a>
                                                        </li>
                                                    }
                                                    @foreach (var synonym in meaning.SynonymSet.CollocationMeanings.
                                                        Select(i => i.Collocation).Distinct().OrderBy(i => i.Name)) {
                                                        <li>
                                                            <a href="@Url.Action("Item", "Collocation", new { id = synonym.ID })">@synonym.Name&nbsp;</a>
                                                        </li>
                                                    }
                                                    @foreach (var synonym in meaning.SynonymSet.IdiomMeanings.
                                                        Select(i => i.Idiom).Distinct().OrderBy(i => i.Name)) {
                                                        <li>
                                                            <a href="@Url.Action("Item", "Idiom", new { id = synonym.ID })">@synonym.Name&nbsp;</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    </li> 
                                }
                            </ol>
                        </div>
                    }
                }
                <div>
                    <hr />
                    <div class="text-right">
                        <a href="@Model.UrlReferrer" class="button button-primary">Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
