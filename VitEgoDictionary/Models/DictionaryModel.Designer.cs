//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PrepositionExample_PrepositionMix", "PrepositionMix", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.PrepositionMix), "PrepositionExample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PrepositionMixExample), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PrepositionMix_Preposition1", "Preposition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Preposition), "PrepositionMix", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PrepositionMix), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_GrammarStructures_SpeechParts", "SpeechPart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.SpeechPart), "GrammarStructure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.GrammarStructure), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Variation_GrammarStructure", "GrammarStructure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.GrammarStructure), "Variation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Variation), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Words_Countability", "Countability", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.Countability), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Word), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Words_Formality", "Formality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Formality), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Word), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.PhrasalVerbMeaning), "PhrasalVerbMeaningExample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerbMeaningExample), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.PhrasalVerb), "PhrasalVerbMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerbMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerb_Preposition", "Preposition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Preposition), "PhrasalVerb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerb), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerb_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Word), "PhrasalVerb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerb), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PrepositionMix_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Word), "PrepositionMix", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PrepositionMix), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Word_SpeechPart", "SpeechPart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.SpeechPart), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Word), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Word_Topic", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Topic), "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Word), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Variation_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Word), "Variation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Variation), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Example_Meaning", "WordMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.WordMeaning), "WordMeaningExample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.WordMeaningExample), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Meaning_Word", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Word), "WordMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.WordMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Words_GenericWord", "Word", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.Word), "Word1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Word), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Collocations_Topics", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Topic), "Collocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Collocation), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Idioms_Topics", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Topic), "Idiom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Idiom), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_CollocationExamples_CollocationMeanings", "CollocationMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.CollocationMeaning), "CollocationMeaningExample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.CollocationMeaningExample), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_CollocationMeanings_Collocations", "Collocation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Collocation), "CollocationMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.CollocationMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_CollocationMeanings_SynonymSets", "SynonymSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.SynonymSet), "CollocationMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.CollocationMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.IdiomMeaning), "IdiomMeaningExample", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.IdiomMeaningExample), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_IdiomMeanings_Idioms", "Idiom", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Idiom), "IdiomMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.IdiomMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_IdiomMeanings_SynonymSets", "SynonymSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.SynonymSet), "IdiomMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.IdiomMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.SynonymSet), "PhrasalVerbMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerbMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_WordMeanings_SynonymSets", "SynonymSet", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(VitEgoDictionary.Models.SynonymSet), "WordMeaning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.WordMeaning), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Collocations_Formality", "Formality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Formality), "Collocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Collocation), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_Idioms_Formality", "Formality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Formality), "Idiom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.Idiom), true)]
[assembly: EdmRelationshipAttribute("DictionaryModel", "FK_PhrasalVerbs_Formality", "Formality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(VitEgoDictionary.Models.Formality), "PhrasalVerb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(VitEgoDictionary.Models.PhrasalVerb), true)]

#endregion

namespace VitEgoDictionary.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DictionaryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DictionaryEntities object using the connection string found in the 'DictionaryEntities' section of the application configuration file.
        /// </summary>
        public DictionaryEntities() : base("name=DictionaryEntities", "DictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DictionaryEntities object.
        /// </summary>
        public DictionaryEntities(string connectionString) : base(connectionString, "DictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DictionaryEntities object.
        /// </summary>
        public DictionaryEntities(EntityConnection connection) : base(connection, "DictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrepositionMixExample> PrepositionMixExamples
        {
            get
            {
                if ((_PrepositionMixExamples == null))
                {
                    _PrepositionMixExamples = base.CreateObjectSet<PrepositionMixExample>("PrepositionMixExamples");
                }
                return _PrepositionMixExamples;
            }
        }
        private ObjectSet<PrepositionMixExample> _PrepositionMixExamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrepositionMix> PrepositionMixes
        {
            get
            {
                if ((_PrepositionMixes == null))
                {
                    _PrepositionMixes = base.CreateObjectSet<PrepositionMix>("PrepositionMixes");
                }
                return _PrepositionMixes;
            }
        }
        private ObjectSet<PrepositionMix> _PrepositionMixes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpeechPart> SpeechParts
        {
            get
            {
                if ((_SpeechParts == null))
                {
                    _SpeechParts = base.CreateObjectSet<SpeechPart>("SpeechParts");
                }
                return _SpeechParts;
            }
        }
        private ObjectSet<SpeechPart> _SpeechParts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Variation> Variations
        {
            get
            {
                if ((_Variations == null))
                {
                    _Variations = base.CreateObjectSet<Variation>("Variations");
                }
                return _Variations;
            }
        }
        private ObjectSet<Variation> _Variations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Preposition> Prepositions
        {
            get
            {
                if ((_Prepositions == null))
                {
                    _Prepositions = base.CreateObjectSet<Preposition>("Prepositions");
                }
                return _Prepositions;
            }
        }
        private ObjectSet<Preposition> _Prepositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Countability> Countabilities
        {
            get
            {
                if ((_Countabilities == null))
                {
                    _Countabilities = base.CreateObjectSet<Countability>("Countabilities");
                }
                return _Countabilities;
            }
        }
        private ObjectSet<Countability> _Countabilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Formality> Formalities
        {
            get
            {
                if ((_Formalities == null))
                {
                    _Formalities = base.CreateObjectSet<Formality>("Formalities");
                }
                return _Formalities;
            }
        }
        private ObjectSet<Formality> _Formalities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GrammarStructure> GrammarStructures
        {
            get
            {
                if ((_GrammarStructures == null))
                {
                    _GrammarStructures = base.CreateObjectSet<GrammarStructure>("GrammarStructures");
                }
                return _GrammarStructures;
            }
        }
        private ObjectSet<GrammarStructure> _GrammarStructures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhrasalVerbMeaningExample> PhrasalVerbMeaningExamples
        {
            get
            {
                if ((_PhrasalVerbMeaningExamples == null))
                {
                    _PhrasalVerbMeaningExamples = base.CreateObjectSet<PhrasalVerbMeaningExample>("PhrasalVerbMeaningExamples");
                }
                return _PhrasalVerbMeaningExamples;
            }
        }
        private ObjectSet<PhrasalVerbMeaningExample> _PhrasalVerbMeaningExamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordMeaningExample> WordMeaningExamples
        {
            get
            {
                if ((_WordMeaningExamples == null))
                {
                    _WordMeaningExamples = base.CreateObjectSet<WordMeaningExample>("WordMeaningExamples");
                }
                return _WordMeaningExamples;
            }
        }
        private ObjectSet<WordMeaningExample> _WordMeaningExamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdiomMeaningExample> IdiomMeaningExamples
        {
            get
            {
                if ((_IdiomMeaningExamples == null))
                {
                    _IdiomMeaningExamples = base.CreateObjectSet<IdiomMeaningExample>("IdiomMeaningExamples");
                }
                return _IdiomMeaningExamples;
            }
        }
        private ObjectSet<IdiomMeaningExample> _IdiomMeaningExamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollocationMeaningExample> CollocationMeaningExamples
        {
            get
            {
                if ((_CollocationMeaningExamples == null))
                {
                    _CollocationMeaningExamples = base.CreateObjectSet<CollocationMeaningExample>("CollocationMeaningExamples");
                }
                return _CollocationMeaningExamples;
            }
        }
        private ObjectSet<CollocationMeaningExample> _CollocationMeaningExamples;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhrasalVerbMeaning> PhrasalVerbMeanings
        {
            get
            {
                if ((_PhrasalVerbMeanings == null))
                {
                    _PhrasalVerbMeanings = base.CreateObjectSet<PhrasalVerbMeaning>("PhrasalVerbMeanings");
                }
                return _PhrasalVerbMeanings;
            }
        }
        private ObjectSet<PhrasalVerbMeaning> _PhrasalVerbMeanings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhrasalVerb> PhrasalVerbs
        {
            get
            {
                if ((_PhrasalVerbs == null))
                {
                    _PhrasalVerbs = base.CreateObjectSet<PhrasalVerb>("PhrasalVerbs");
                }
                return _PhrasalVerbs;
            }
        }
        private ObjectSet<PhrasalVerb> _PhrasalVerbs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordMeaning> WordMeanings
        {
            get
            {
                if ((_WordMeanings == null))
                {
                    _WordMeanings = base.CreateObjectSet<WordMeaning>("WordMeanings");
                }
                return _WordMeanings;
            }
        }
        private ObjectSet<WordMeaning> _WordMeanings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Word> Words
        {
            get
            {
                if ((_Words == null))
                {
                    _Words = base.CreateObjectSet<Word>("Words");
                }
                return _Words;
            }
        }
        private ObjectSet<Word> _Words;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Collocation> Collocations
        {
            get
            {
                if ((_Collocations == null))
                {
                    _Collocations = base.CreateObjectSet<Collocation>("Collocations");
                }
                return _Collocations;
            }
        }
        private ObjectSet<Collocation> _Collocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Idiom> Idioms
        {
            get
            {
                if ((_Idioms == null))
                {
                    _Idioms = base.CreateObjectSet<Idiom>("Idioms");
                }
                return _Idioms;
            }
        }
        private ObjectSet<Idiom> _Idioms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollocationMeaning> CollocationMeanings
        {
            get
            {
                if ((_CollocationMeanings == null))
                {
                    _CollocationMeanings = base.CreateObjectSet<CollocationMeaning>("CollocationMeanings");
                }
                return _CollocationMeanings;
            }
        }
        private ObjectSet<CollocationMeaning> _CollocationMeanings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdiomMeaning> IdiomMeanings
        {
            get
            {
                if ((_IdiomMeanings == null))
                {
                    _IdiomMeanings = base.CreateObjectSet<IdiomMeaning>("IdiomMeanings");
                }
                return _IdiomMeanings;
            }
        }
        private ObjectSet<IdiomMeaning> _IdiomMeanings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SynonymSet> SynonymSets
        {
            get
            {
                if ((_SynonymSets == null))
                {
                    _SynonymSets = base.CreateObjectSet<SynonymSet>("SynonymSets");
                }
                return _SynonymSets;
            }
        }
        private ObjectSet<SynonymSet> _SynonymSets;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrepositionMixExamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrepositionMixExamples(PrepositionMixExample prepositionMixExample)
        {
            base.AddObject("PrepositionMixExamples", prepositionMixExample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrepositionMixes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrepositionMixes(PrepositionMix prepositionMix)
        {
            base.AddObject("PrepositionMixes", prepositionMix);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpeechParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeechParts(SpeechPart speechPart)
        {
            base.AddObject("SpeechParts", speechPart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Variations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariations(Variation variation)
        {
            base.AddObject("Variations", variation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prepositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrepositions(Preposition preposition)
        {
            base.AddObject("Prepositions", preposition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countabilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountabilities(Countability countability)
        {
            base.AddObject("Countabilities", countability);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Formalities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormalities(Formality formality)
        {
            base.AddObject("Formalities", formality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GrammarStructures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrammarStructures(GrammarStructure grammarStructure)
        {
            base.AddObject("GrammarStructures", grammarStructure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhrasalVerbMeaningExamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhrasalVerbMeaningExamples(PhrasalVerbMeaningExample phrasalVerbMeaningExample)
        {
            base.AddObject("PhrasalVerbMeaningExamples", phrasalVerbMeaningExample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordMeaningExamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordMeaningExamples(WordMeaningExample wordMeaningExample)
        {
            base.AddObject("WordMeaningExamples", wordMeaningExample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdiomMeaningExamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdiomMeaningExamples(IdiomMeaningExample idiomMeaningExample)
        {
            base.AddObject("IdiomMeaningExamples", idiomMeaningExample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollocationMeaningExamples EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollocationMeaningExamples(CollocationMeaningExample collocationMeaningExample)
        {
            base.AddObject("CollocationMeaningExamples", collocationMeaningExample);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhrasalVerbMeanings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhrasalVerbMeanings(PhrasalVerbMeaning phrasalVerbMeaning)
        {
            base.AddObject("PhrasalVerbMeanings", phrasalVerbMeaning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhrasalVerbs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhrasalVerbs(PhrasalVerb phrasalVerb)
        {
            base.AddObject("PhrasalVerbs", phrasalVerb);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordMeanings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordMeanings(WordMeaning wordMeaning)
        {
            base.AddObject("WordMeanings", wordMeaning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Words EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWords(Word word)
        {
            base.AddObject("Words", word);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Collocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollocations(Collocation collocation)
        {
            base.AddObject("Collocations", collocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Idioms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdioms(Idiom idiom)
        {
            base.AddObject("Idioms", idiom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollocationMeanings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollocationMeanings(CollocationMeaning collocationMeaning)
        {
            base.AddObject("CollocationMeanings", collocationMeaning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdiomMeanings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdiomMeanings(IdiomMeaning idiomMeaning)
        {
            base.AddObject("IdiomMeanings", idiomMeaning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SynonymSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSynonymSets(SynonymSet synonymSet)
        {
            base.AddObject("SynonymSets", synonymSet);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Collocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Collocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Collocation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Topic">Initial value of the IDF_Topic property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iDF_Formality">Initial value of the IDF_Formality property.</param>
        public static Collocation CreateCollocation(global::System.Int32 id, global::System.Int32 iDF_Topic, global::System.String name, global::System.DateTime date, global::System.Int32 iDF_Formality)
        {
            Collocation collocation = new Collocation();
            collocation.ID = id;
            collocation.IDF_Topic = iDF_Topic;
            collocation.Name = name;
            collocation.Date = date;
            collocation.IDF_Formality = iDF_Formality;
            return collocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Topic
        {
            get
            {
                return _IDF_Topic;
            }
            set
            {
                OnIDF_TopicChanging(value);
                ReportPropertyChanging("IDF_Topic");
                _IDF_Topic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Topic");
                OnIDF_TopicChanged();
            }
        }
        private global::System.Int32 _IDF_Topic;
        partial void OnIDF_TopicChanging(global::System.Int32 value);
        partial void OnIDF_TopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Formality
        {
            get
            {
                return _IDF_Formality;
            }
            set
            {
                OnIDF_FormalityChanging(value);
                ReportPropertyChanging("IDF_Formality");
                _IDF_Formality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Formality");
                OnIDF_FormalityChanged();
            }
        }
        private global::System.Int32 _IDF_Formality;
        partial void OnIDF_FormalityChanging(global::System.Int32 value);
        partial void OnIDF_FormalityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Collocations_Topics", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Collocations_Topics", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Collocations_Topics", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Collocations_Topics", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("DictionaryModel.FK_Collocations_Topics", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationMeanings_Collocations", "CollocationMeaning")]
        public EntityCollection<CollocationMeaning> Meanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollocationMeaning>("DictionaryModel.FK_CollocationMeanings_Collocations", "CollocationMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollocationMeaning>("DictionaryModel.FK_CollocationMeanings_Collocations", "CollocationMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Collocations_Formality", "Formality")]
        public Formality Formality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Collocations_Formality", "Formality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Collocations_Formality", "Formality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Formality> FormalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Collocations_Formality", "Formality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Formality>("DictionaryModel.FK_Collocations_Formality", "Formality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="CollocationMeaning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollocationMeaning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollocationMeaning object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Collocation">Initial value of the IDF_Collocation property.</param>
        /// <param name="meaning">Initial value of the Meaning property.</param>
        public static CollocationMeaning CreateCollocationMeaning(global::System.Int32 id, global::System.Int32 iDF_Collocation, global::System.String meaning)
        {
            CollocationMeaning collocationMeaning = new CollocationMeaning();
            collocationMeaning.ID = id;
            collocationMeaning.IDF_Collocation = iDF_Collocation;
            collocationMeaning.Meaning = meaning;
            return collocationMeaning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Collocation
        {
            get
            {
                return _IDF_Collocation;
            }
            set
            {
                OnIDF_CollocationChanging(value);
                ReportPropertyChanging("IDF_Collocation");
                _IDF_Collocation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Collocation");
                OnIDF_CollocationChanged();
            }
        }
        private global::System.Int32 _IDF_Collocation;
        partial void OnIDF_CollocationChanging(global::System.Int32 value);
        partial void OnIDF_CollocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Meaning
        {
            get
            {
                return _Meaning;
            }
            set
            {
                OnMeaningChanging(value);
                ReportPropertyChanging("Meaning");
                _Meaning = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Meaning");
                OnMeaningChanged();
            }
        }
        private global::System.String _Meaning;
        partial void OnMeaningChanging(global::System.String value);
        partial void OnMeaningChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationExamples_CollocationMeanings", "CollocationMeaningExample")]
        public EntityCollection<CollocationMeaningExample> Examples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollocationMeaningExample>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaningExample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollocationMeaningExample>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaningExample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationMeanings_Collocations", "Collocation")]
        public Collocation Collocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collocation>("DictionaryModel.FK_CollocationMeanings_Collocations", "Collocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collocation>("DictionaryModel.FK_CollocationMeanings_Collocations", "Collocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Collocation> CollocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collocation>("DictionaryModel.FK_CollocationMeanings_Collocations", "Collocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Collocation>("DictionaryModel.FK_CollocationMeanings_Collocations", "Collocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationMeanings_SynonymSets", "SynonymSet")]
        public SynonymSet SynonymSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "SynonymSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "SynonymSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynonymSet> SynonymSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "SynonymSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynonymSet>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "SynonymSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="CollocationMeaningExample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollocationMeaningExample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollocationMeaningExample object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_CollocationMeaning">Initial value of the IDF_CollocationMeaning property.</param>
        /// <param name="example">Initial value of the Example property.</param>
        public static CollocationMeaningExample CreateCollocationMeaningExample(global::System.Int32 id, global::System.Int32 iDF_CollocationMeaning, global::System.String example)
        {
            CollocationMeaningExample collocationMeaningExample = new CollocationMeaningExample();
            collocationMeaningExample.ID = id;
            collocationMeaningExample.IDF_CollocationMeaning = iDF_CollocationMeaning;
            collocationMeaningExample.Example = example;
            return collocationMeaningExample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_CollocationMeaning
        {
            get
            {
                return _IDF_CollocationMeaning;
            }
            set
            {
                OnIDF_CollocationMeaningChanging(value);
                ReportPropertyChanging("IDF_CollocationMeaning");
                _IDF_CollocationMeaning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_CollocationMeaning");
                OnIDF_CollocationMeaningChanged();
            }
        }
        private global::System.Int32 _IDF_CollocationMeaning;
        partial void OnIDF_CollocationMeaningChanging(global::System.Int32 value);
        partial void OnIDF_CollocationMeaningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Example
        {
            get
            {
                return _Example;
            }
            set
            {
                OnExampleChanging(value);
                ReportPropertyChanging("Example");
                _Example = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Example");
                OnExampleChanged();
            }
        }
        private global::System.String _Example;
        partial void OnExampleChanging(global::System.String value);
        partial void OnExampleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationExamples_CollocationMeanings", "CollocationMeaning")]
        public CollocationMeaning Meaning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollocationMeaning>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollocationMeaning>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollocationMeaning> MeaningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollocationMeaning>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollocationMeaning>("DictionaryModel.FK_CollocationExamples_CollocationMeanings", "CollocationMeaning", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Countability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Countability : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Countability object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Countability CreateCountability(global::System.Int32 id, global::System.String name)
        {
            Countability countability = new Countability();
            countability.ID = id;
            countability.Name = name;
            return countability;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_Countability", "Word")]
        public EntityCollection<Word> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DictionaryModel.FK_Words_Countability", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DictionaryModel.FK_Words_Countability", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Formality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Formality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Formality object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Formality CreateFormality(global::System.Int32 id, global::System.String name)
        {
            Formality formality = new Formality();
            formality.ID = id;
            formality.Name = name;
            return formality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_Formality", "Word")]
        public EntityCollection<Word> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DictionaryModel.FK_Words_Formality", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DictionaryModel.FK_Words_Formality", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Collocations_Formality", "Collocation")]
        public EntityCollection<Collocation> Collocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Collocation>("DictionaryModel.FK_Collocations_Formality", "Collocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Collocation>("DictionaryModel.FK_Collocations_Formality", "Collocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Idioms_Formality", "Idiom")]
        public EntityCollection<Idiom> Idioms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Idiom>("DictionaryModel.FK_Idioms_Formality", "Idiom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Idiom>("DictionaryModel.FK_Idioms_Formality", "Idiom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbs_Formality", "PhrasalVerb")]
        public EntityCollection<PhrasalVerb> PhrasalVerbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbs_Formality", "PhrasalVerb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbs_Formality", "PhrasalVerb", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="GrammarStructure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GrammarStructure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GrammarStructure object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_SpeechPart">Initial value of the IDF_SpeechPart property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        /// <param name="isAuxiliary">Initial value of the IsAuxiliary property.</param>
        public static GrammarStructure CreateGrammarStructure(global::System.Int32 id, global::System.Int32 iDF_SpeechPart, global::System.String name, global::System.String shortName, global::System.Boolean isAuxiliary)
        {
            GrammarStructure grammarStructure = new GrammarStructure();
            grammarStructure.ID = id;
            grammarStructure.IDF_SpeechPart = iDF_SpeechPart;
            grammarStructure.Name = name;
            grammarStructure.ShortName = shortName;
            grammarStructure.IsAuxiliary = isAuxiliary;
            return grammarStructure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_SpeechPart
        {
            get
            {
                return _IDF_SpeechPart;
            }
            set
            {
                OnIDF_SpeechPartChanging(value);
                ReportPropertyChanging("IDF_SpeechPart");
                _IDF_SpeechPart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SpeechPart");
                OnIDF_SpeechPartChanged();
            }
        }
        private global::System.Int32 _IDF_SpeechPart;
        partial void OnIDF_SpeechPartChanging(global::System.Int32 value);
        partial void OnIDF_SpeechPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuxiliary
        {
            get
            {
                return _IsAuxiliary;
            }
            set
            {
                OnIsAuxiliaryChanging(value);
                ReportPropertyChanging("IsAuxiliary");
                _IsAuxiliary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAuxiliary");
                OnIsAuxiliaryChanged();
            }
        }
        private global::System.Boolean _IsAuxiliary;
        partial void OnIsAuxiliaryChanging(global::System.Boolean value);
        partial void OnIsAuxiliaryChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_GrammarStructures_SpeechParts", "SpeechPart")]
        public SpeechPart SpeechPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_GrammarStructures_SpeechParts", "SpeechPart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_GrammarStructures_SpeechParts", "SpeechPart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpeechPart> SpeechPartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_GrammarStructures_SpeechParts", "SpeechPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpeechPart>("DictionaryModel.FK_GrammarStructures_SpeechParts", "SpeechPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Variation_GrammarStructure", "Variation")]
        public EntityCollection<Variation> Variations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Variation>("DictionaryModel.FK_Variation_GrammarStructure", "Variation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Variation>("DictionaryModel.FK_Variation_GrammarStructure", "Variation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Idiom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Idiom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Idiom object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Topic">Initial value of the IDF_Topic property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iDF_Formality">Initial value of the IDF_Formality property.</param>
        public static Idiom CreateIdiom(global::System.Int32 id, global::System.Int32 iDF_Topic, global::System.String name, global::System.DateTime date, global::System.Int32 iDF_Formality)
        {
            Idiom idiom = new Idiom();
            idiom.ID = id;
            idiom.IDF_Topic = iDF_Topic;
            idiom.Name = name;
            idiom.Date = date;
            idiom.IDF_Formality = iDF_Formality;
            return idiom;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Topic
        {
            get
            {
                return _IDF_Topic;
            }
            set
            {
                OnIDF_TopicChanging(value);
                ReportPropertyChanging("IDF_Topic");
                _IDF_Topic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Topic");
                OnIDF_TopicChanged();
            }
        }
        private global::System.Int32 _IDF_Topic;
        partial void OnIDF_TopicChanging(global::System.Int32 value);
        partial void OnIDF_TopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Formality
        {
            get
            {
                return _IDF_Formality;
            }
            set
            {
                OnIDF_FormalityChanging(value);
                ReportPropertyChanging("IDF_Formality");
                _IDF_Formality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Formality");
                OnIDF_FormalityChanged();
            }
        }
        private global::System.Int32 _IDF_Formality;
        partial void OnIDF_FormalityChanging(global::System.Int32 value);
        partial void OnIDF_FormalityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Idioms_Topics", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Idioms_Topics", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Idioms_Topics", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Idioms_Topics", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("DictionaryModel.FK_Idioms_Topics", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeanings_Idioms", "IdiomMeaning")]
        public EntityCollection<IdiomMeaning> Meanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IdiomMeaning>("DictionaryModel.FK_IdiomMeanings_Idioms", "IdiomMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IdiomMeaning>("DictionaryModel.FK_IdiomMeanings_Idioms", "IdiomMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Idioms_Formality", "Formality")]
        public Formality Formality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Idioms_Formality", "Formality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Idioms_Formality", "Formality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Formality> FormalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Idioms_Formality", "Formality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Formality>("DictionaryModel.FK_Idioms_Formality", "Formality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="IdiomMeaning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdiomMeaning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdiomMeaning object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Idiom">Initial value of the IDF_Idiom property.</param>
        /// <param name="meaning">Initial value of the Meaning property.</param>
        public static IdiomMeaning CreateIdiomMeaning(global::System.Int32 id, global::System.Int32 iDF_Idiom, global::System.String meaning)
        {
            IdiomMeaning idiomMeaning = new IdiomMeaning();
            idiomMeaning.ID = id;
            idiomMeaning.IDF_Idiom = iDF_Idiom;
            idiomMeaning.Meaning = meaning;
            return idiomMeaning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Idiom
        {
            get
            {
                return _IDF_Idiom;
            }
            set
            {
                OnIDF_IdiomChanging(value);
                ReportPropertyChanging("IDF_Idiom");
                _IDF_Idiom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Idiom");
                OnIDF_IdiomChanged();
            }
        }
        private global::System.Int32 _IDF_Idiom;
        partial void OnIDF_IdiomChanging(global::System.Int32 value);
        partial void OnIDF_IdiomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Meaning
        {
            get
            {
                return _Meaning;
            }
            set
            {
                OnMeaningChanging(value);
                ReportPropertyChanging("Meaning");
                _Meaning = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Meaning");
                OnMeaningChanged();
            }
        }
        private global::System.String _Meaning;
        partial void OnMeaningChanging(global::System.String value);
        partial void OnMeaningChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaningExample")]
        public EntityCollection<IdiomMeaningExample> Examples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IdiomMeaningExample>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaningExample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IdiomMeaningExample>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaningExample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeanings_Idioms", "Idiom")]
        public Idiom Idiom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Idiom>("DictionaryModel.FK_IdiomMeanings_Idioms", "Idiom").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Idiom>("DictionaryModel.FK_IdiomMeanings_Idioms", "Idiom").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Idiom> IdiomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Idiom>("DictionaryModel.FK_IdiomMeanings_Idioms", "Idiom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Idiom>("DictionaryModel.FK_IdiomMeanings_Idioms", "Idiom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeanings_SynonymSets", "SynonymSet")]
        public SynonymSet SynonymSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "SynonymSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "SynonymSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynonymSet> SynonymSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "SynonymSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynonymSet>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "SynonymSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="IdiomMeaningExample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdiomMeaningExample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdiomMeaningExample object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_IdiomMeaning">Initial value of the IDF_IdiomMeaning property.</param>
        /// <param name="example">Initial value of the Example property.</param>
        public static IdiomMeaningExample CreateIdiomMeaningExample(global::System.Int32 id, global::System.Int32 iDF_IdiomMeaning, global::System.String example)
        {
            IdiomMeaningExample idiomMeaningExample = new IdiomMeaningExample();
            idiomMeaningExample.ID = id;
            idiomMeaningExample.IDF_IdiomMeaning = iDF_IdiomMeaning;
            idiomMeaningExample.Example = example;
            return idiomMeaningExample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_IdiomMeaning
        {
            get
            {
                return _IDF_IdiomMeaning;
            }
            set
            {
                OnIDF_IdiomMeaningChanging(value);
                ReportPropertyChanging("IDF_IdiomMeaning");
                _IDF_IdiomMeaning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_IdiomMeaning");
                OnIDF_IdiomMeaningChanged();
            }
        }
        private global::System.Int32 _IDF_IdiomMeaning;
        partial void OnIDF_IdiomMeaningChanging(global::System.Int32 value);
        partial void OnIDF_IdiomMeaningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Example
        {
            get
            {
                return _Example;
            }
            set
            {
                OnExampleChanging(value);
                ReportPropertyChanging("Example");
                _Example = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Example");
                OnExampleChanged();
            }
        }
        private global::System.String _Example;
        partial void OnExampleChanging(global::System.String value);
        partial void OnExampleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning")]
        public IdiomMeaning Meaning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdiomMeaning>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdiomMeaning>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IdiomMeaning> MeaningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdiomMeaning>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IdiomMeaning>("DictionaryModel.FK_IdiomMeaningExamples_IdiomMeanings", "IdiomMeaning", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="PhrasalVerb")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhrasalVerb : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhrasalVerb object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Verb">Initial value of the IDF_Verb property.</param>
        /// <param name="iDF_Preposition">Initial value of the IDF_Preposition property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="iDF_Formality">Initial value of the IDF_Formality property.</param>
        public static PhrasalVerb CreatePhrasalVerb(global::System.Int32 id, global::System.Int32 iDF_Verb, global::System.Int32 iDF_Preposition, global::System.DateTime date, global::System.Int32 iDF_Formality)
        {
            PhrasalVerb phrasalVerb = new PhrasalVerb();
            phrasalVerb.ID = id;
            phrasalVerb.IDF_Verb = iDF_Verb;
            phrasalVerb.IDF_Preposition = iDF_Preposition;
            phrasalVerb.Date = date;
            phrasalVerb.IDF_Formality = iDF_Formality;
            return phrasalVerb;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Verb
        {
            get
            {
                return _IDF_Verb;
            }
            set
            {
                OnIDF_VerbChanging(value);
                ReportPropertyChanging("IDF_Verb");
                _IDF_Verb = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Verb");
                OnIDF_VerbChanged();
            }
        }
        private global::System.Int32 _IDF_Verb;
        partial void OnIDF_VerbChanging(global::System.Int32 value);
        partial void OnIDF_VerbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Preposition
        {
            get
            {
                return _IDF_Preposition;
            }
            set
            {
                OnIDF_PrepositionChanging(value);
                ReportPropertyChanging("IDF_Preposition");
                _IDF_Preposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Preposition");
                OnIDF_PrepositionChanged();
            }
        }
        private global::System.Int32 _IDF_Preposition;
        partial void OnIDF_PrepositionChanging(global::System.Int32 value);
        partial void OnIDF_PrepositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Formality
        {
            get
            {
                return _IDF_Formality;
            }
            set
            {
                OnIDF_FormalityChanging(value);
                ReportPropertyChanging("IDF_Formality");
                _IDF_Formality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Formality");
                OnIDF_FormalityChanged();
            }
        }
        private global::System.Int32 _IDF_Formality;
        partial void OnIDF_FormalityChanging(global::System.Int32 value);
        partial void OnIDF_FormalityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerbMeaning")]
        public EntityCollection<PhrasalVerbMeaning> Meanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerbMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerbMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerb_Preposition", "Preposition")]
        public Preposition Preposition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PhrasalVerb_Preposition", "Preposition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PhrasalVerb_Preposition", "Preposition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Preposition> PrepositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PhrasalVerb_Preposition", "Preposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Preposition>("DictionaryModel.FK_PhrasalVerb_Preposition", "Preposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerb_Word", "Word")]
        public Word Verb
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PhrasalVerb_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PhrasalVerb_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> VerbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PhrasalVerb_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("DictionaryModel.FK_PhrasalVerb_Word", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbs_Formality", "Formality")]
        public Formality Formality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_PhrasalVerbs_Formality", "Formality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_PhrasalVerbs_Formality", "Formality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Formality> FormalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_PhrasalVerbs_Formality", "Formality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Formality>("DictionaryModel.FK_PhrasalVerbs_Formality", "Formality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="PhrasalVerbMeaning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhrasalVerbMeaning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhrasalVerbMeaning object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_PhrasalVerb">Initial value of the IDF_PhrasalVerb property.</param>
        /// <param name="meaning">Initial value of the Meaning property.</param>
        public static PhrasalVerbMeaning CreatePhrasalVerbMeaning(global::System.Int32 id, global::System.Int32 iDF_PhrasalVerb, global::System.String meaning)
        {
            PhrasalVerbMeaning phrasalVerbMeaning = new PhrasalVerbMeaning();
            phrasalVerbMeaning.ID = id;
            phrasalVerbMeaning.IDF_PhrasalVerb = iDF_PhrasalVerb;
            phrasalVerbMeaning.Meaning = meaning;
            return phrasalVerbMeaning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_PhrasalVerb
        {
            get
            {
                return _IDF_PhrasalVerb;
            }
            set
            {
                OnIDF_PhrasalVerbChanging(value);
                ReportPropertyChanging("IDF_PhrasalVerb");
                _IDF_PhrasalVerb = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_PhrasalVerb");
                OnIDF_PhrasalVerbChanged();
            }
        }
        private global::System.Int32 _IDF_PhrasalVerb;
        partial void OnIDF_PhrasalVerbChanging(global::System.Int32 value);
        partial void OnIDF_PhrasalVerbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Meaning
        {
            get
            {
                return _Meaning;
            }
            set
            {
                OnMeaningChanging(value);
                ReportPropertyChanging("Meaning");
                _Meaning = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Meaning");
                OnMeaningChanged();
            }
        }
        private global::System.String _Meaning;
        partial void OnMeaningChanging(global::System.String value);
        partial void OnMeaningChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaningExample")]
        public EntityCollection<PhrasalVerbMeaningExample> Examples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerbMeaningExample>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaningExample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerbMeaningExample>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaningExample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb")]
        public PhrasalVerb PhrasalVerb
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhrasalVerb> PhrasalVerbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhrasalVerb>("DictionaryModel.FK_PhrasalVerbMeaning_PhrasalVerb", "PhrasalVerb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet")]
        public SynonymSet SynonymSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynonymSet> SynonymSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynonymSet>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "SynonymSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="PhrasalVerbMeaningExample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhrasalVerbMeaningExample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhrasalVerbMeaningExample object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_PhrasalVerbMeaning">Initial value of the IDF_PhrasalVerbMeaning property.</param>
        /// <param name="example">Initial value of the Example property.</param>
        public static PhrasalVerbMeaningExample CreatePhrasalVerbMeaningExample(global::System.Int32 id, global::System.Int32 iDF_PhrasalVerbMeaning, global::System.String example)
        {
            PhrasalVerbMeaningExample phrasalVerbMeaningExample = new PhrasalVerbMeaningExample();
            phrasalVerbMeaningExample.ID = id;
            phrasalVerbMeaningExample.IDF_PhrasalVerbMeaning = iDF_PhrasalVerbMeaning;
            phrasalVerbMeaningExample.Example = example;
            return phrasalVerbMeaningExample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_PhrasalVerbMeaning
        {
            get
            {
                return _IDF_PhrasalVerbMeaning;
            }
            set
            {
                OnIDF_PhrasalVerbMeaningChanging(value);
                ReportPropertyChanging("IDF_PhrasalVerbMeaning");
                _IDF_PhrasalVerbMeaning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_PhrasalVerbMeaning");
                OnIDF_PhrasalVerbMeaningChanged();
            }
        }
        private global::System.Int32 _IDF_PhrasalVerbMeaning;
        partial void OnIDF_PhrasalVerbMeaningChanging(global::System.Int32 value);
        partial void OnIDF_PhrasalVerbMeaningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Example
        {
            get
            {
                return _Example;
            }
            set
            {
                OnExampleChanging(value);
                ReportPropertyChanging("Example");
                _Example = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Example");
                OnExampleChanged();
            }
        }
        private global::System.String _Example;
        partial void OnExampleChanging(global::System.String value);
        partial void OnExampleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning")]
        public PhrasalVerbMeaning PhrasalVerbMeaning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhrasalVerbMeaning> PhrasalVerbMeaningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbExample_PhrasalVerbMeaning", "PhrasalVerbMeaning", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Preposition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Preposition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Preposition object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Preposition CreatePreposition(global::System.Int32 id, global::System.String name)
        {
            Preposition preposition = new Preposition();
            preposition.ID = id;
            preposition.Name = name;
            return preposition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionMix_Preposition1", "PrepositionMix")]
        public EntityCollection<PrepositionMix> PrepositionMixes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrepositionMix>("DictionaryModel.FK_PrepositionMix_Preposition1", "PrepositionMix");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrepositionMix>("DictionaryModel.FK_PrepositionMix_Preposition1", "PrepositionMix", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerb_Preposition", "PhrasalVerb")]
        public EntityCollection<PhrasalVerb> PhrasalVerbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerb_Preposition", "PhrasalVerb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerb_Preposition", "PhrasalVerb", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="PrepositionMix")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrepositionMix : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrepositionMix object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Word">Initial value of the IDF_Word property.</param>
        /// <param name="iDF_Preposition">Initial value of the IDF_Preposition property.</param>
        public static PrepositionMix CreatePrepositionMix(global::System.Int32 id, global::System.Int32 iDF_Word, global::System.Int32 iDF_Preposition)
        {
            PrepositionMix prepositionMix = new PrepositionMix();
            prepositionMix.ID = id;
            prepositionMix.IDF_Word = iDF_Word;
            prepositionMix.IDF_Preposition = iDF_Preposition;
            return prepositionMix;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Word
        {
            get
            {
                return _IDF_Word;
            }
            set
            {
                OnIDF_WordChanging(value);
                ReportPropertyChanging("IDF_Word");
                _IDF_Word = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Word");
                OnIDF_WordChanged();
            }
        }
        private global::System.Int32 _IDF_Word;
        partial void OnIDF_WordChanging(global::System.Int32 value);
        partial void OnIDF_WordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Preposition
        {
            get
            {
                return _IDF_Preposition;
            }
            set
            {
                OnIDF_PrepositionChanging(value);
                ReportPropertyChanging("IDF_Preposition");
                _IDF_Preposition = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Preposition");
                OnIDF_PrepositionChanged();
            }
        }
        private global::System.Int32 _IDF_Preposition;
        partial void OnIDF_PrepositionChanging(global::System.Int32 value);
        partial void OnIDF_PrepositionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionExample_PrepositionMix", "PrepositionExample")]
        public EntityCollection<PrepositionMixExample> Examples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrepositionMixExample>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionExample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrepositionMixExample>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionExample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionMix_Preposition1", "Preposition")]
        public Preposition Preposition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PrepositionMix_Preposition1", "Preposition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PrepositionMix_Preposition1", "Preposition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Preposition> PrepositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preposition>("DictionaryModel.FK_PrepositionMix_Preposition1", "Preposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Preposition>("DictionaryModel.FK_PrepositionMix_Preposition1", "Preposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionMix_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PrepositionMix_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PrepositionMix_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_PrepositionMix_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("DictionaryModel.FK_PrepositionMix_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="PrepositionMixExample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrepositionMixExample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrepositionMixExample object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_PrepositionMix">Initial value of the IDF_PrepositionMix property.</param>
        /// <param name="example">Initial value of the Example property.</param>
        public static PrepositionMixExample CreatePrepositionMixExample(global::System.Int32 id, global::System.Int32 iDF_PrepositionMix, global::System.String example)
        {
            PrepositionMixExample prepositionMixExample = new PrepositionMixExample();
            prepositionMixExample.ID = id;
            prepositionMixExample.IDF_PrepositionMix = iDF_PrepositionMix;
            prepositionMixExample.Example = example;
            return prepositionMixExample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_PrepositionMix
        {
            get
            {
                return _IDF_PrepositionMix;
            }
            set
            {
                OnIDF_PrepositionMixChanging(value);
                ReportPropertyChanging("IDF_PrepositionMix");
                _IDF_PrepositionMix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_PrepositionMix");
                OnIDF_PrepositionMixChanged();
            }
        }
        private global::System.Int32 _IDF_PrepositionMix;
        partial void OnIDF_PrepositionMixChanging(global::System.Int32 value);
        partial void OnIDF_PrepositionMixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Example
        {
            get
            {
                return _Example;
            }
            set
            {
                OnExampleChanging(value);
                ReportPropertyChanging("Example");
                _Example = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Example");
                OnExampleChanged();
            }
        }
        private global::System.String _Example;
        partial void OnExampleChanging(global::System.String value);
        partial void OnExampleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionExample_PrepositionMix", "PrepositionMix")]
        public PrepositionMix PrepositionMix
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepositionMix>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionMix").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepositionMix>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionMix").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrepositionMix> PrepositionMixReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepositionMix>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionMix");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrepositionMix>("DictionaryModel.FK_PrepositionExample_PrepositionMix", "PrepositionMix", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="SpeechPart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpeechPart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpeechPart object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        public static SpeechPart CreateSpeechPart(global::System.Int32 id, global::System.String name, global::System.String shortName)
        {
            SpeechPart speechPart = new SpeechPart();
            speechPart.ID = id;
            speechPart.Name = name;
            speechPart.ShortName = shortName;
            return speechPart;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_GrammarStructures_SpeechParts", "GrammarStructure")]
        public EntityCollection<GrammarStructure> GrammarStructures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GrammarStructure>("DictionaryModel.FK_GrammarStructures_SpeechParts", "GrammarStructure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GrammarStructure>("DictionaryModel.FK_GrammarStructures_SpeechParts", "GrammarStructure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Word_SpeechPart", "Word")]
        public EntityCollection<Word> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DictionaryModel.FK_Word_SpeechPart", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DictionaryModel.FK_Word_SpeechPart", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="SynonymSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SynonymSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SynonymSet object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SynonymSet CreateSynonymSet(global::System.Int32 id)
        {
            SynonymSet synonymSet = new SynonymSet();
            synonymSet.ID = id;
            return synonymSet;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_CollocationMeanings_SynonymSets", "CollocationMeaning")]
        public EntityCollection<CollocationMeaning> CollocationMeanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollocationMeaning>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "CollocationMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollocationMeaning>("DictionaryModel.FK_CollocationMeanings_SynonymSets", "CollocationMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_IdiomMeanings_SynonymSets", "IdiomMeaning")]
        public EntityCollection<IdiomMeaning> IdiomMeanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IdiomMeaning>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "IdiomMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IdiomMeaning>("DictionaryModel.FK_IdiomMeanings_SynonymSets", "IdiomMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerbMeanings_SynonymSets", "PhrasalVerbMeaning")]
        public EntityCollection<PhrasalVerbMeaning> PhrasalVerbMeanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "PhrasalVerbMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerbMeaning>("DictionaryModel.FK_PhrasalVerbMeanings_SynonymSets", "PhrasalVerbMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_WordMeanings_SynonymSets", "WordMeaning")]
        public EntityCollection<WordMeaning> WordMeanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordMeaning>("DictionaryModel.FK_WordMeanings_SynonymSets", "WordMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordMeaning>("DictionaryModel.FK_WordMeanings_SynonymSets", "WordMeaning", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Topic CreateTopic(global::System.Int32 id, global::System.String name)
        {
            Topic topic = new Topic();
            topic.ID = id;
            topic.Name = name;
            return topic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Word_Topic", "Word")]
        public EntityCollection<Word> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DictionaryModel.FK_Word_Topic", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DictionaryModel.FK_Word_Topic", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Collocations_Topics", "Collocation")]
        public EntityCollection<Collocation> Collocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Collocation>("DictionaryModel.FK_Collocations_Topics", "Collocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Collocation>("DictionaryModel.FK_Collocations_Topics", "Collocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Idioms_Topics", "Idiom")]
        public EntityCollection<Idiom> Idioms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Idiom>("DictionaryModel.FK_Idioms_Topics", "Idiom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Idiom>("DictionaryModel.FK_Idioms_Topics", "Idiom", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Variation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Variation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Variation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_GrammarStructure">Initial value of the IDF_GrammarStructure property.</param>
        /// <param name="iDF_Word">Initial value of the IDF_Word property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Variation CreateVariation(global::System.Int32 id, global::System.Int32 iDF_GrammarStructure, global::System.Int32 iDF_Word, global::System.String name)
        {
            Variation variation = new Variation();
            variation.ID = id;
            variation.IDF_GrammarStructure = iDF_GrammarStructure;
            variation.IDF_Word = iDF_Word;
            variation.Name = name;
            return variation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_GrammarStructure
        {
            get
            {
                return _IDF_GrammarStructure;
            }
            set
            {
                OnIDF_GrammarStructureChanging(value);
                ReportPropertyChanging("IDF_GrammarStructure");
                _IDF_GrammarStructure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_GrammarStructure");
                OnIDF_GrammarStructureChanged();
            }
        }
        private global::System.Int32 _IDF_GrammarStructure;
        partial void OnIDF_GrammarStructureChanging(global::System.Int32 value);
        partial void OnIDF_GrammarStructureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Word
        {
            get
            {
                return _IDF_Word;
            }
            set
            {
                OnIDF_WordChanging(value);
                ReportPropertyChanging("IDF_Word");
                _IDF_Word = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Word");
                OnIDF_WordChanged();
            }
        }
        private global::System.Int32 _IDF_Word;
        partial void OnIDF_WordChanging(global::System.Int32 value);
        partial void OnIDF_WordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Variation_GrammarStructure", "GrammarStructure")]
        public GrammarStructure GrammarStructure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrammarStructure>("DictionaryModel.FK_Variation_GrammarStructure", "GrammarStructure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrammarStructure>("DictionaryModel.FK_Variation_GrammarStructure", "GrammarStructure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GrammarStructure> GrammarStructureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrammarStructure>("DictionaryModel.FK_Variation_GrammarStructure", "GrammarStructure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GrammarStructure>("DictionaryModel.FK_Variation_GrammarStructure", "GrammarStructure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Variation_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Variation_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Variation_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Variation_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("DictionaryModel.FK_Variation_Word", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="Word")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Word : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Word object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_SpeechPart">Initial value of the IDF_SpeechPart property.</param>
        /// <param name="iDF_Topic">Initial value of the IDF_Topic property.</param>
        /// <param name="iDF_Formality">Initial value of the IDF_Formality property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Word CreateWord(global::System.Int32 id, global::System.Int32 iDF_SpeechPart, global::System.Int32 iDF_Topic, global::System.Int32 iDF_Formality, global::System.String name, global::System.DateTime date)
        {
            Word word = new Word();
            word.ID = id;
            word.IDF_SpeechPart = iDF_SpeechPart;
            word.IDF_Topic = iDF_Topic;
            word.IDF_Formality = iDF_Formality;
            word.Name = name;
            word.Date = date;
            return word;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_SpeechPart
        {
            get
            {
                return _IDF_SpeechPart;
            }
            set
            {
                OnIDF_SpeechPartChanging(value);
                ReportPropertyChanging("IDF_SpeechPart");
                _IDF_SpeechPart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SpeechPart");
                OnIDF_SpeechPartChanged();
            }
        }
        private global::System.Int32 _IDF_SpeechPart;
        partial void OnIDF_SpeechPartChanging(global::System.Int32 value);
        partial void OnIDF_SpeechPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Topic
        {
            get
            {
                return _IDF_Topic;
            }
            set
            {
                OnIDF_TopicChanging(value);
                ReportPropertyChanging("IDF_Topic");
                _IDF_Topic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Topic");
                OnIDF_TopicChanged();
            }
        }
        private global::System.Int32 _IDF_Topic;
        partial void OnIDF_TopicChanging(global::System.Int32 value);
        partial void OnIDF_TopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_GenericWord
        {
            get
            {
                return _IDF_GenericWord;
            }
            set
            {
                OnIDF_GenericWordChanging(value);
                ReportPropertyChanging("IDF_GenericWord");
                _IDF_GenericWord = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_GenericWord");
                OnIDF_GenericWordChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_GenericWord;
        partial void OnIDF_GenericWordChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_GenericWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Formality
        {
            get
            {
                return _IDF_Formality;
            }
            set
            {
                OnIDF_FormalityChanging(value);
                ReportPropertyChanging("IDF_Formality");
                _IDF_Formality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Formality");
                OnIDF_FormalityChanged();
            }
        }
        private global::System.Int32 _IDF_Formality;
        partial void OnIDF_FormalityChanging(global::System.Int32 value);
        partial void OnIDF_FormalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_Countability
        {
            get
            {
                return _IDF_Countability;
            }
            set
            {
                OnIDF_CountabilityChanging(value);
                ReportPropertyChanging("IDF_Countability");
                _IDF_Countability = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Countability");
                OnIDF_CountabilityChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_Countability;
        partial void OnIDF_CountabilityChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_CountabilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_Countability", "Countability")]
        public Countability Countability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countability>("DictionaryModel.FK_Words_Countability", "Countability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countability>("DictionaryModel.FK_Words_Countability", "Countability").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Countability> CountabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Countability>("DictionaryModel.FK_Words_Countability", "Countability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Countability>("DictionaryModel.FK_Words_Countability", "Countability", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_Formality", "Formality")]
        public Formality Formality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Words_Formality", "Formality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Words_Formality", "Formality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Formality> FormalityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Formality>("DictionaryModel.FK_Words_Formality", "Formality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Formality>("DictionaryModel.FK_Words_Formality", "Formality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PhrasalVerb_Word", "PhrasalVerb")]
        public EntityCollection<PhrasalVerb> PhrasalVerbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerb_Word", "PhrasalVerb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhrasalVerb>("DictionaryModel.FK_PhrasalVerb_Word", "PhrasalVerb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_PrepositionMix_Word", "PrepositionMix")]
        public EntityCollection<PrepositionMix> PrepositionMixes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrepositionMix>("DictionaryModel.FK_PrepositionMix_Word", "PrepositionMix");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrepositionMix>("DictionaryModel.FK_PrepositionMix_Word", "PrepositionMix", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Word_SpeechPart", "SpeechPart")]
        public SpeechPart SpeechPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_Word_SpeechPart", "SpeechPart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_Word_SpeechPart", "SpeechPart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpeechPart> SpeechPartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeechPart>("DictionaryModel.FK_Word_SpeechPart", "SpeechPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpeechPart>("DictionaryModel.FK_Word_SpeechPart", "SpeechPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Word_Topic", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Word_Topic", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Word_Topic", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("DictionaryModel.FK_Word_Topic", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("DictionaryModel.FK_Word_Topic", "Topic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Variation_Word", "Variation")]
        public EntityCollection<Variation> Variations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Variation>("DictionaryModel.FK_Variation_Word", "Variation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Variation>("DictionaryModel.FK_Variation_Word", "Variation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Meaning_Word", "WordMeaning")]
        public EntityCollection<WordMeaning> Meanings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordMeaning>("DictionaryModel.FK_Meaning_Word", "WordMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordMeaning>("DictionaryModel.FK_Meaning_Word", "WordMeaning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_GenericWord", "Word1")]
        public EntityCollection<Word> Hyponyms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Word>("DictionaryModel.FK_Words_GenericWord", "Word1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Word>("DictionaryModel.FK_Words_GenericWord", "Word1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Words_GenericWord", "Word")]
        public Word GenericWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Words_GenericWord", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Words_GenericWord", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> GenericWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Words_GenericWord", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("DictionaryModel.FK_Words_GenericWord", "Word", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="WordMeaning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordMeaning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordMeaning object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_Word">Initial value of the IDF_Word property.</param>
        /// <param name="meaning">Initial value of the Meaning property.</param>
        public static WordMeaning CreateWordMeaning(global::System.Int32 id, global::System.Int32 iDF_Word, global::System.String meaning)
        {
            WordMeaning wordMeaning = new WordMeaning();
            wordMeaning.ID = id;
            wordMeaning.IDF_Word = iDF_Word;
            wordMeaning.Meaning = meaning;
            return wordMeaning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_Word
        {
            get
            {
                return _IDF_Word;
            }
            set
            {
                OnIDF_WordChanging(value);
                ReportPropertyChanging("IDF_Word");
                _IDF_Word = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_Word");
                OnIDF_WordChanged();
            }
        }
        private global::System.Int32 _IDF_Word;
        partial void OnIDF_WordChanging(global::System.Int32 value);
        partial void OnIDF_WordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IDF_SynonymSet
        {
            get
            {
                return _IDF_SynonymSet;
            }
            set
            {
                OnIDF_SynonymSetChanging(value);
                ReportPropertyChanging("IDF_SynonymSet");
                _IDF_SynonymSet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_SynonymSet");
                OnIDF_SynonymSetChanged();
            }
        }
        private Nullable<global::System.Int32> _IDF_SynonymSet;
        partial void OnIDF_SynonymSetChanging(Nullable<global::System.Int32> value);
        partial void OnIDF_SynonymSetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Meaning
        {
            get
            {
                return _Meaning;
            }
            set
            {
                OnMeaningChanging(value);
                ReportPropertyChanging("Meaning");
                _Meaning = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Meaning");
                OnMeaningChanged();
            }
        }
        private global::System.String _Meaning;
        partial void OnMeaningChanging(global::System.String value);
        partial void OnMeaningChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Example_Meaning", "WordMeaningExample")]
        public EntityCollection<WordMeaningExample> Examples
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordMeaningExample>("DictionaryModel.FK_Example_Meaning", "WordMeaningExample");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordMeaningExample>("DictionaryModel.FK_Example_Meaning", "WordMeaningExample", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Meaning_Word", "Word")]
        public Word Word
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Meaning_Word", "Word").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Meaning_Word", "Word").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Word> WordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Word>("DictionaryModel.FK_Meaning_Word", "Word");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Word>("DictionaryModel.FK_Meaning_Word", "Word", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_WordMeanings_SynonymSets", "SynonymSet")]
        public SynonymSet SynonymSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_WordMeanings_SynonymSets", "SynonymSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_WordMeanings_SynonymSets", "SynonymSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SynonymSet> SynonymSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SynonymSet>("DictionaryModel.FK_WordMeanings_SynonymSets", "SynonymSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SynonymSet>("DictionaryModel.FK_WordMeanings_SynonymSets", "SynonymSet", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DictionaryModel", Name="WordMeaningExample")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordMeaningExample : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordMeaningExample object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="iDF_WordMeaning">Initial value of the IDF_WordMeaning property.</param>
        /// <param name="example">Initial value of the Example property.</param>
        public static WordMeaningExample CreateWordMeaningExample(global::System.Int32 id, global::System.Int32 iDF_WordMeaning, global::System.String example)
        {
            WordMeaningExample wordMeaningExample = new WordMeaningExample();
            wordMeaningExample.ID = id;
            wordMeaningExample.IDF_WordMeaning = iDF_WordMeaning;
            wordMeaningExample.Example = example;
            return wordMeaningExample;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDF_WordMeaning
        {
            get
            {
                return _IDF_WordMeaning;
            }
            set
            {
                OnIDF_WordMeaningChanging(value);
                ReportPropertyChanging("IDF_WordMeaning");
                _IDF_WordMeaning = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDF_WordMeaning");
                OnIDF_WordMeaningChanged();
            }
        }
        private global::System.Int32 _IDF_WordMeaning;
        partial void OnIDF_WordMeaningChanging(global::System.Int32 value);
        partial void OnIDF_WordMeaningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Example
        {
            get
            {
                return _Example;
            }
            set
            {
                OnExampleChanging(value);
                ReportPropertyChanging("Example");
                _Example = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Example");
                OnExampleChanged();
            }
        }
        private global::System.String _Example;
        partial void OnExampleChanging(global::System.String value);
        partial void OnExampleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DictionaryModel", "FK_Example_Meaning", "WordMeaning")]
        public WordMeaning WordMeaning
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WordMeaning>("DictionaryModel.FK_Example_Meaning", "WordMeaning").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WordMeaning>("DictionaryModel.FK_Example_Meaning", "WordMeaning").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WordMeaning> WordMeaningReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WordMeaning>("DictionaryModel.FK_Example_Meaning", "WordMeaning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WordMeaning>("DictionaryModel.FK_Example_Meaning", "WordMeaning", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
